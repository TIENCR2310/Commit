{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getSchedulesByMonth } from '../services/apiSchedule';\nimport { getShiftsByMonth } from '../services/apiShift';\nimport { getTeacherIdByEmail } from '../services/apiAuth';\nexport const useTeacherShifts = (selectedMonth, selectedDate) => {\n  _s();\n  const [shifts, setShifts] = useState([]);\n  const [daysInMonth, setDaysInMonth] = useState(30);\n  const [teacherId, setTeacherId] = useState(null);\n  useEffect(() => {\n    const email = sessionStorage.getItem('email');\n    const token = sessionStorage.getItem('token');\n    if (email && token) {\n      getTeacherIdByEmail(email, token).then(setTeacherId).catch(error => console.error('Lỗi khi lấy teacherId:', error));\n    }\n  }, []);\n  useEffect(() => {\n    if (!teacherId) return;\n    const year = selectedDate.getFullYear();\n    const days = new Date(year, selectedMonth + 1, 0).getDate();\n    setDaysInMonth(days);\n    const month = (selectedMonth + 1).toString().padStart(2, '0');\n    const yearMonth = `${year}-${month}`;\n    Promise.all([getShiftsByMonth(year, selectedMonth + 1), getSchedulesByMonth(teacherId, yearMonth)]).then(([shiftsData, schedulesData]) => {\n      const groupedShifts = shiftsData.reduce((acc, shift) => {\n        const day = new Date(shift.date).getDate();\n        if (!acc[day]) acc[day] = [];\n        acc[day].push(shift);\n        return acc;\n      }, {});\n      const groupedSchedules = schedulesData.reduce((acc, schedule) => {\n        const day = new Date(schedule.date).getDate();\n        if (!acc[day]) acc[day] = [];\n        acc[day].push(schedule);\n        return acc;\n      }, {});\n      const updatedShifts = {\n        ...groupedShifts\n      };\n      for (let day in groupedSchedules) {\n        if (updatedShifts[day]) {\n          updatedShifts[day] = updatedShifts[day].map(shift => {\n            const matchingSchedule = groupedSchedules[day].find(schedule => schedule.description === shift.description);\n            return {\n              ...shift,\n              registered: !!matchingSchedule,\n              note: matchingSchedule ? matchingSchedule.note : null\n            };\n          });\n        }\n      }\n      setShifts(updatedShifts);\n    }).catch(error => console.error('Lỗi khi lấy dữ liệu:', error));\n  }, [selectedMonth, selectedDate, teacherId]);\n  return {\n    shifts,\n    daysInMonth,\n    teacherId\n  };\n};\n_s(useTeacherShifts, \"SMkGZETdZRPGMfhEJsZMV2541Gg=\");","map":{"version":3,"names":["useState","useEffect","getSchedulesByMonth","getShiftsByMonth","getTeacherIdByEmail","useTeacherShifts","selectedMonth","selectedDate","_s","shifts","setShifts","daysInMonth","setDaysInMonth","teacherId","setTeacherId","email","sessionStorage","getItem","token","then","catch","error","console","year","getFullYear","days","Date","getDate","month","toString","padStart","yearMonth","Promise","all","shiftsData","schedulesData","groupedShifts","reduce","acc","shift","day","date","push","groupedSchedules","schedule","updatedShifts","map","matchingSchedule","find","description","registered","note"],"sources":["C:/Users/ASUS/Desktop/FaceIDVLU-FE/src/hooks/useTeacherShifts.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { \r\n  getSchedulesByMonth\r\n} from '../services/apiSchedule';\r\nimport { \r\n    getShiftsByMonth\r\n  } from '../services/apiShift';\r\nimport { getTeacherIdByEmail } from '../services/apiAuth';\r\n\r\nexport const useTeacherShifts = (selectedMonth, selectedDate) => {\r\n  const [shifts, setShifts] = useState([]);\r\n  const [daysInMonth, setDaysInMonth] = useState(30);\r\n  const [teacherId, setTeacherId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const email = sessionStorage.getItem('email');\r\n    const token = sessionStorage.getItem('token');\r\n\r\n    if (email && token) {\r\n      getTeacherIdByEmail(email, token)\r\n        .then(setTeacherId)\r\n        .catch(error => console.error('Lỗi khi lấy teacherId:', error));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!teacherId) return;\r\n\r\n    const year = selectedDate.getFullYear();\r\n    const days = new Date(year, selectedMonth + 1, 0).getDate();\r\n    setDaysInMonth(days);\r\n\r\n    const month = (selectedMonth + 1).toString().padStart(2, '0');\r\n    const yearMonth = `${year}-${month}`;\r\n\r\n    Promise.all([\r\n      getShiftsByMonth(year, selectedMonth + 1),\r\n      getSchedulesByMonth(teacherId, yearMonth)\r\n    ])\r\n    .then(([shiftsData, schedulesData]) => {\r\n      const groupedShifts = shiftsData.reduce((acc, shift) => {\r\n        const day = new Date(shift.date).getDate();\r\n        if (!acc[day]) acc[day] = [];\r\n        acc[day].push(shift);\r\n        return acc;\r\n      }, {});\r\n\r\n      const groupedSchedules = schedulesData.reduce((acc, schedule) => {\r\n        const day = new Date(schedule.date).getDate();\r\n        if (!acc[day]) acc[day] = [];\r\n        acc[day].push(schedule);\r\n        return acc;\r\n      }, {});\r\n\r\n      const updatedShifts = { ...groupedShifts };\r\n      for (let day in groupedSchedules) {\r\n        if (updatedShifts[day]) {\r\n          updatedShifts[day] = updatedShifts[day].map(shift => {\r\n            const matchingSchedule = groupedSchedules[day].find(\r\n              schedule => schedule.description === shift.description\r\n            );\r\n            return {\r\n              ...shift,\r\n              registered: !!matchingSchedule,\r\n              note: matchingSchedule ? matchingSchedule.note : null\r\n            };\r\n          });\r\n        }\r\n      }\r\n\r\n      setShifts(updatedShifts);\r\n    })\r\n    .catch(error => console.error('Lỗi khi lấy dữ liệu:', error));\r\n  }, [selectedMonth, selectedDate, teacherId]);\r\n\r\n  return { shifts, daysInMonth, teacherId };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
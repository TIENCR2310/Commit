{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const getAllShifts = async (skip = 0, limit = 100) => {\n  try {\n    const response = await apiClient.get(`shifts/?skip=${skip}&limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Get All Shifts Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nexport const getShiftById = async shiftId => {\n  try {\n    const response = await apiClient.get(`shifts/${shiftId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Get Shift Error:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\nexport const getShiftsByDate = async date => {\n  try {\n    const response = await apiClient.get(`shifts/date/${date}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"Get Shifts By Date Error:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\nexport const getShiftsByMonth = async (year, month) => {\n  try {\n    const response = await apiClient.get(`shifts/month/${year}/${month}`);\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"Get Shifts By Month Error:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\nexport const getShiftsByMonthForDean = async (year, month) => {\n  try {\n    const response = await apiClient.get(`shifts/month-for-dean/${year}/${month}`);\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error(\"Get Shifts By Month For Dean Error:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};\nexport const createShift = async shiftData => {\n  try {\n    const response = await apiClient.post('shifts/', shiftData);\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error(\"Create Shift Error:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\nexport const updateShift = async (shiftId, shiftData) => {\n  try {\n    const response = await apiClient.put(`shifts/${shiftId}`, shiftData);\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    console.error(\"Update Shift Error:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw error;\n  }\n};\nexport const updateShiftShowTeacher = async (year, month, show_teacher) => {\n  try {\n    const response = await apiClient.put(`shifts/update_show_teacher/${year}/${month}/${show_teacher}`);\n    return response.data;\n  } catch (error) {\n    var _error$response8;\n    console.error(\"Update Shift Show Teacher Error:\", ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n    throw error;\n  }\n};\nexport const deleteShift = async shiftId => {\n  try {\n    const response = await apiClient.delete(`shifts/${shiftId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response9;\n    console.error(\"Delete Shift Error:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n    throw error;\n  }\n};\nexport const getShiftsWaiting = async date => {\n  try {\n    console.log(\"Gia tri date la:\", date);\n    const response = await apiClient.get(`shifts/waiting/${date}`);\n    if (Array.isArray(response.data)) {\n      console.log(\"Dữ liệu nhận được:\", response.data);\n      const filteredShifts = response.data.filter(shift => shift.teachers && shift.teachers.length > 0);\n      console.log(\"Dữ liệu sau khi lọc:\", filteredShifts);\n      return filteredShifts;\n    }\n    return [];\n  } catch (error) {\n    var _error$response10;\n    console.error(\"Get getShiftsWaiting Error:\", ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","getAllShifts","skip","limit","response","get","data","error","_error$response","console","message","getShiftById","shiftId","_error$response2","getShiftsByDate","date","_error$response3","getShiftsByMonth","year","month","_error$response4","getShiftsByMonthForDean","_error$response5","createShift","shiftData","post","_error$response6","updateShift","put","_error$response7","updateShiftShowTeacher","show_teacher","_error$response8","deleteShift","delete","_error$response9","getShiftsWaiting","log","Array","isArray","filteredShifts","filter","shift","teachers","length","_error$response10"],"sources":["C:/Users/ASUS/Desktop/FaceIDVLU-FE/src/services/apiShift.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: \"http://localhost:8000\", \r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n});\r\n\r\nexport const getAllShifts = async (skip = 0, limit = 100) => {\r\n    try {\r\n        const response = await apiClient.get(`shifts/?skip=${skip}&limit=${limit}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Get All Shifts Error:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getShiftById = async (shiftId) => {\r\n    try {\r\n        const response = await apiClient.get(`shifts/${shiftId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Get Shift Error:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getShiftsByDate = async (date) => {\r\n    try {\r\n        const response = await apiClient.get(`shifts/date/${date}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Get Shifts By Date Error:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getShiftsByMonth = async (year, month) => {\r\n    try {\r\n        const response = await apiClient.get(`shifts/month/${year}/${month}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Get Shifts By Month Error:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\nexport const getShiftsByMonthForDean = async (year, month) => {\r\n    try {\r\n        const response = await apiClient.get(`shifts/month-for-dean/${year}/${month}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Get Shifts By Month For Dean Error:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\nexport const createShift = async (shiftData) => {\r\n    try {\r\n        const response = await apiClient.post('shifts/', shiftData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Create Shift Error:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateShift = async (shiftId, shiftData) => {\r\n    try {\r\n        const response = await apiClient.put(`shifts/${shiftId}`, shiftData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Update Shift Error:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateShiftShowTeacher = async (year, month, show_teacher) => {\r\n    try {\r\n        const response = await apiClient.put(`shifts/update_show_teacher/${year}/${month}/${show_teacher}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Update Shift Show Teacher Error:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteShift = async (shiftId) => {\r\n    try {\r\n        const response = await apiClient.delete(`shifts/${shiftId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Delete Shift Error:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\nexport const getShiftsWaiting = async (date) => {\r\n    try {\r\n        console.log(\"Gia tri date la:\", date);\r\n        const response = await apiClient.get(`shifts/waiting/${date}`);\r\n        \r\n        if (Array.isArray(response.data)) {\r\n            console.log(\"Dữ liệu nhận được:\", response.data); \r\n\r\n            const filteredShifts = response.data.filter(shift => \r\n                shift.teachers && shift.teachers.length > 0\r\n            );\r\n\r\n            console.log(\"Dữ liệu sau khi lọc:\", filteredShifts); \r\n            return filteredShifts; \r\n        }\r\n\r\n        return []; \r\n    } catch (error) {\r\n        console.error(\"Get getShiftsWaiting Error:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
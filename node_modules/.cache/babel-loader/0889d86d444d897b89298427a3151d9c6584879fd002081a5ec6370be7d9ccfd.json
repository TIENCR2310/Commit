{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const getSchedules = async (skip = 0, limit = 100) => {\n  try {\n    const response = await apiClient.get('/schedules', {\n      params: {\n        skip,\n        limit\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching schedules:', error);\n    throw error;\n  }\n};\nexport const getSchedulesByMonth = async (teacher_id, month) => {\n  try {\n    const response = await apiClient.get(`/schedules/monthly/${teacher_id}/${month}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching schedules by date:', error);\n    throw error;\n  }\n};\nexport const createSchedule = async (teacherId, description, date) => {\n  try {\n    const scheduleData = {\n      teacher_id: teacherId,\n      description: description,\n      date: date\n    };\n    const response = await apiClient.post('/schedules/register', scheduleData);\n    return response.data;\n  } catch (error) {\n    console.error('Vấn đề chi tiết', error.response.data.detail);\n    throw error;\n  }\n};\nexport const teacherRegisterSchedule = async (teacherId, description, date) => {\n  try {\n    const scheduleData = {\n      teacher_id: teacherId,\n      description: description,\n      date: date,\n      note: \"success\"\n    };\n    const response = await apiClient.post('/schedules/teacher_register_schedule', scheduleData);\n    return response.data;\n  } catch (error) {\n    console.error('Vấn đề chi tiết', error.response.data.detail);\n    throw error;\n  }\n};\nexport const updateSchedule = async (scheduleId, scheduleData) => {\n  try {\n    const response = await apiClient.put(`/schedules/${scheduleId}`, scheduleData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating schedule:', error);\n    throw error;\n  }\n};\nexport const deleteSchedule = async (teacherId, description, date) => {\n  try {\n    await apiClient.delete(`/schedules/remove_by_teacher/${teacherId}/${description}/${date}`);\n  } catch (error) {\n    console.error('Error deleting schedule:', error);\n    throw error;\n  }\n};\nexport const changeSchedule = async (teacherId, descriptionold, dateold, descriptionnew, datenew) => {\n  try {\n    await apiClient.put(`/schedules/change_by_teacher/${teacherId}/${descriptionold}/${dateold}/${descriptionnew}/${datenew}/`);\n  } catch (error) {\n    console.error('Error deleting schedule:', error);\n    throw error;\n  }\n};\nexport const leaveSchedule = async (teacherId, description, date) => {\n  try {\n    await apiClient.put(`/schedules/leave_by_teacher/${teacherId}/${description}/${date}`);\n  } catch (error) {\n    console.error('Error deleting schedule:', error);\n    throw error;\n  }\n};\nexport const getSchedulesTodayByTeacherId = async teacher_id => {\n  try {\n    const response = await apiClient.get(`/schedules/today/${teacher_id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching schedules by date:', error);\n    throw error;\n  }\n};\nexport const updateExcel = async file => {\n  try {\n    const response = await apiClient.post('/schedules/secretary_upload_schedule', file, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Chi tiết lỗi:', error.response ? error.response.data : error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","getSchedules","skip","limit","response","get","params","data","error","console","getSchedulesByMonth","teacher_id","month","createSchedule","teacherId","description","date","scheduleData","post","detail","teacherRegisterSchedule","note","updateSchedule","scheduleId","put","deleteSchedule","delete","changeSchedule","descriptionold","dateold","descriptionnew","datenew","leaveSchedule","getSchedulesTodayByTeacherId","updateExcel","file"],"sources":["C:/Users/ASUS/Desktop/FaceIDVLU-FE/src/services/apiSchedule.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: \"http://localhost:8000\", \r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n});\r\n\r\nexport const getSchedules = async (skip = 0, limit = 100) => {\r\n    try {\r\n        const response = await apiClient.get('/schedules', {\r\n            params: {\r\n                skip,\r\n                limit\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching schedules:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getSchedulesByMonth = async (teacher_id,month) => {\r\n    try {\r\n        const response = await apiClient.get(`/schedules/monthly/${teacher_id}/${month}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching schedules by date:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createSchedule = async (teacherId, description, date) => {\r\n    try {\r\n        const scheduleData = {\r\n            teacher_id: teacherId, \r\n            description: description, \r\n            date: date, \r\n        };\r\n\r\n        const response = await apiClient.post('/schedules/register', scheduleData);\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Vấn đề chi tiết', error.response.data.detail);\r\n\r\n        throw error;\r\n    }\r\n};\r\nexport const teacherRegisterSchedule = async (teacherId, description, date) => {\r\n    try {\r\n        const scheduleData = {\r\n            teacher_id: teacherId, \r\n            description: description, \r\n            date: date, \r\n            note: \"success\"\r\n        };\r\n\r\n        const response = await apiClient.post('/schedules/teacher_register_schedule', scheduleData);\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Vấn đề chi tiết', error.response.data.detail);\r\n\r\n        throw error;\r\n    }\r\n};\r\nexport const updateSchedule = async (scheduleId, scheduleData) => {\r\n    try {\r\n        const response = await apiClient.put(`/schedules/${scheduleId}`, scheduleData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating schedule:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteSchedule = async (teacherId, description, date) => {\r\n    try {\r\n        await apiClient.delete(`/schedules/remove_by_teacher/${teacherId}/${description}/${date}`);\r\n    } catch (error) {\r\n        console.error('Error deleting schedule:', error);\r\n        throw error;\r\n    }\r\n};\r\nexport const changeSchedule = async (teacherId, descriptionold, dateold, descriptionnew, datenew) => {\r\n    try {\r\n        await apiClient.put(`/schedules/change_by_teacher/${teacherId}/${descriptionold}/${dateold}/${descriptionnew}/${datenew}/`);\r\n    } catch (error) {\r\n        console.error('Error deleting schedule:', error);\r\n        throw error;\r\n    }\r\n};\r\nexport const leaveSchedule = async (teacherId, description, date) => {\r\n    try {\r\n        await apiClient.put(`/schedules/leave_by_teacher/${teacherId}/${description}/${date}`);\r\n    } catch (error) {\r\n        console.error('Error deleting schedule:', error);\r\n        throw error;\r\n    }\r\n};\r\nexport const getSchedulesTodayByTeacherId = async (teacher_id) => {\r\n    try {\r\n        const response = await apiClient.get(`/schedules/today/${teacher_id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching schedules by date:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateExcel = async (file) => {\r\n    try {\r\n        const response = await apiClient.post('/schedules/secretary_upload_schedule', file, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Chi tiết lỗi:', error.response ? error.response.data : error);\r\n        throw error;\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}